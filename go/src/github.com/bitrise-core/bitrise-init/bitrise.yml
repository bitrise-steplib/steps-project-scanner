format_version: 1.2.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

trigger_map:
- pattern: "*"
  is_pull_request_allowed: true
  workflow: ci

app:
  envs:
  - BIN_NAME: bitrise-init

workflows:
  # ----------------------------------------------------------------
  # --- workflows for CI and testing
  ci:
    title: Bitrise Init CI
    description: Bitrise Init CI
    before_run:
    - _prepare_and_setup
    after_run:
    - test
    steps:
    - script:
        title: Print go environment
        inputs:
        - content: |-
            set -x
            go version
            echo $GO15VENDOREXPERIMENT
    - script:
        title: Export go files to test
        inputs:
        - content: |-
            set -e
            set -x
            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
    - script:
        title: Err check
        inputs:
        - content: errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: Go lint
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            while read -r line; do
              echo "-> Linting: $line"
              golint_out="$(golint $line)"
              if [[ "${golint_out}" != "" ]] ; then
                echo "=> Golint issues found:"
                echo "${golint_out}"
                exit 1
              fi
            done <<< "$GOLIST_WITHOUT_VENDOR"
    - script:
        title: Go test
        inputs:
        - content: go test ./...

  test:
    title: Bitrise Init Test
    description: Bitrise Init Test
    before_run:
    - _install_init_tool
    steps:
    - script:
        title: "Scanner test: ios-no-shared-schemes"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/ios-no-shared-schemes.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: ios-cocoapods-at-root"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/ios-cocoapods-at-root.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: sample-apps-ios-simple-objc"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-ios-simple-objc.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: sample-apps-android-sdk22"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/sample-apps-android-sdk22.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: xamarin-sample-app"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/xamarin-sample-app.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: sample-apps-ios-watchkit"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-ios-watchkit.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: fastlane"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/fastlane.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: sample-apps-xamarin-ios"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-xamarin-ios.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: android-non-executable-gradlew"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/android-non-executable-gradlew.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json
    - script:
        title: "Scanner test: sample-apps-xamarin-android"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-xamarin-android.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN --ci config --dir ./_tmp/sample-repo --output-dir ./_tmp/output --format json

  # Scanner test with bitrise run config test
  local_test_with_bitrise_run:
    before_run:
    - _install_init_tool
    after_run:
    - _test_ios-no-shared-schemes
    - _test_ios-cocoapods-at-root
    - _test_sample-apps-ios-simple-objc
    - _test_sample-apps-android-sdk22
    - _test_xamarin-sample-app
    - _test_sample-apps-ios-watchkit
    - _test_fastlane
    - _test_sample-apps-xamarin-ios
    - _test_android-non-executable-gradlew
    - _test_sample-apps-xamarin-android

  _test_ios-no-shared-schemes:
    steps:
    - script:
        title: "Scanner test: ios-no-shared-schemes"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/ios-no-shared-schemes.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_ios-cocoapods-at-root:
    steps:
    - script:
        title: "Scanner test: ios-cocoapods-at-root"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/ios-cocoapods-at-root.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_sample-apps-ios-simple-objc:
    steps:
    - script:
        title: "Scanner test: sample-apps-ios-simple-objc"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-ios-simple-objc.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_sample-apps-android-sdk22:
    steps:
    - script:
        title: "Scanner test: sample-apps-android-sdk22"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/sample-apps-android-sdk22.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_xamarin-sample-app:
    steps:
    - script:
        title: "Scanner test: xamarin-sample-app"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/xamarin-sample-app.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_sample-apps-ios-watchkit:
    steps:
    - script:
        title: "Scanner test: sample-apps-ios-watchkit"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-ios-watchkit.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_fastlane:
    steps:
    - script:
        title: "Scanner test: fastlane"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/fastlane.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_sample-apps-xamarin-ios:
    steps:
    - script:
        title: "Scanner test: sample-apps-xamarin-ios"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-xamarin-ios.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_android-non-executable-gradlew:
    steps:
    - script:
        title: "Scanner test: android-non-executable-gradlew"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-samples/android-non-executable-gradlew.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  _test_sample-apps-xamarin-android:
    steps:
    - script:
        title: "Scanner test: sample-apps-xamarin-android"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            rm -rf ./_tmp
            SAMPLE_APP_REPOSITORY_URL=https://github.com/bitrise-io/sample-apps-xamarin-android.git
            git clone $SAMPLE_APP_REPOSITORY_URL ./_tmp/sample-repo
            $SCANNER_BIN config --dir ./_tmp/sample-repo --output-dir ./_tmp/output
    - change-workdir:
        title: Switch working dir
        inputs:
        - path: ./_tmp/sample-repo
        - is_create_path: true
    - script:
        title: "config test"
        inputs:
        - content: |-
            #!/bin/bash
            set -x

            config=$(find ./../output -name "*.yml" -print -quit)
            bitrise run primary --config $config

  # ----------------------------------------------------------------
  # --- workflows for Releasing
  create_release:
    title: Create Release with auto version bump
    description: |
        Creates new version with auto patch version bump based on last git version tag

        1, Create CHANGELOG and git release
        2, Export RELEASE_VERSION
        3, Create binaries
    after_run:
    - _export_release_version
    - create_binaries
    steps:
    - script:
        title: Create CHANGELOG and git release
        inputs:
        - content: |-
            #!/bin/bash
            set -e

            export CI=true
            releaseman create \
              --bump-version patch \
              --set-version-script "bash _scripts/set_version.sh version/version.go"

  create_release_version:
    title: Create Release version
    description: |
        Creates new version with specified RELEASE_VERSION environment

        1, Create CHANGELOG and git release
        2, Export RELEASE_VERSION
        3, Create binaries
    envs:
    - RELEASE_VERSION: 0.10.1
    after_run:
    - _export_release_version
    - create_binaries
    steps:
    - script:
        title: Create CHANGELOG and git release
        inputs:
        - content: |-
            #!/bin/bash
            set -e

            export CI=true
            releaseman create \
              --version $RELEASE_VERSION \
              --set-version-script "bash _scripts/set_version.sh version/version.go"

  _export_release_version:
    title: Export release version
    description: |
        Exports RELEASE_VERSION from ./version/version.go
    steps:
    - script:
        title: Export RELEASE_VERSION
        inputs:
        - content: |
            #!/bin/bash
            set -e

            RELEASE_VERSION=$(go run _scripts/get_version.go -file ./version/version.go)
            echo "RELEASE_VERSION: $RELEASE_VERSION"

            envman add --key RELEASE_VERSION --value $RELEASE_VERSION

  create_binaries:
    title: Create binaries
    description: |
        Creates Linux and Darwin binaries
    steps:
    - script:
        title: Create binaries
        inputs:
        - content: |
            #!/bin/bash
            set -e
            set -x

            echo
            echo "Create final binaries"
            echo "  Build number: $BITRISE_BUILD_NUMBER"

            export ARCH=x86_64
            export GOARCH=amd64

            # Create Darwin bin
            export OS=Darwin
            export GOOS=darwin

            DEPLOY_PATH="_bin/$BIN_NAME-$OS-$ARCH"
            echo "  Create final Darwin binary at: $DEPLOY_PATH"

            version_package="github.com/bitrise-core/bitrise-init/version"

            go build \
              -ldflags "-X $version_package.BuildNumber=$BITRISE_BUILD_NUMBER -X $version_package.Commit=$GIT_CLONE_COMMIT_HASH" \
              -o "$DEPLOY_PATH"

            envman add --key OSX_DEPLOY_PATH --value $DEPLOY_PATH
            cp $DEPLOY_PATH $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH
            echo "  Copy final Darwin binary to: $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH"


            # Create Linux binary
            export OS=Linux
            export GOOS=linux

            DEPLOY_PATH="_bin/$BIN_NAME-$OS-$ARCH"
            echo "  Create final Linux binary at: $DEPLOY_PATH"

            go build \
              -ldflags "-X $version_package.BuildNumber=$BITRISE_BUILD_NUMBER -X $version_package.Commit=$GIT_CLONE_COMMIT_HASH" \
              -o "$DEPLOY_PATH"

            envman add --key LINUX_DEPLOY_PATH --value $DEPLOY_PATH
            cp $DEPLOY_PATH $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH
            echo "  Copy final Linux binary to: $BITRISE_DEPLOY_DIR/$BIN_NAME-$OS-$ARCH"

  # ----------------------------------------------------------------
  # --- workflows for Utility
  _prepare_and_setup:
    title: Prepare bitrise and install testing tools
    description: |
        Prepares the environment for testing
    steps:
    - script:
        title: Install testing tools
        run_if: ".IsCI"
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            # Install dependencies
            go get -u github.com/tools/godep

            # Check for unhandled errors
            go get -u github.com/kisielk/errcheck

            # Go lint
            go get -u github.com/golang/lint/golint

  _install_init_tool:
    title: Installs bitrise-init tool
    description: |
        Installs bitrise-init tool
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash

            #
            # Create scanner bin
            echo "Create scanner bin..."

            export GO15VENDOREXPERIMENT="1"
            export GOPATH="$GOPATH:$THIS_SCRIPTDIR/go/"
            export ARCH=x86_64
            export GOARCH=amd64

            current_os=$(uname -s)
            if [[ "$current_os" == "Darwin" ]] ; then
              export GOOS=darwin
            elif [[ "$current_os" == "Linux" ]]; then
              export GOOS=linux
            else
              echo "step runs on unsupported os: $current_os"
              exit 1
            fi

            tmp_dir=$(mktemp -d)
            current_dir=$(pwd)
            bin_pth="$tmp_dir/scanner"

            go build -o "$bin_pth"

            echo "ceated at: ${bin_pth}"
            envman add --key SCANNER_BIN --value $bin_pth

  godeps_update:
    title: Godeps update
    description: |
      Used for updating bitrise dependencies with godep
    before_run:
    - _prepare_and_setup
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u -v github.com/tools/godep

            rm -rf ./Godeps
            rm -rf ./vendor

            go get -t -d ./...
            go get golang.org/x/sys/unix
            go get github.com/davecgh/go-spew/spew
            go get github.com/pmezard/go-difflib/difflib
            go get github.com/ryanuber/go-glob
            godep save ./...
